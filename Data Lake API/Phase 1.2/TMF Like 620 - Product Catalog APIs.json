{
  "swagger": "2.0",
  "info": {
    "title": "Product Catalog Management",
    "description": "## TMF API Reference: TMF620 - Product Catalog Management\n\n### Release : 19.0 - June 2019\n\nProduct Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products. \n\n### Operations\nProduct Catalog API performs the following operations on the resources :\n- Retrieve an entity or a collection of entities depending on filter criteria\n- Partial update of an entity (including updating rules)\n- Create an entity (including default values and creation rules)\n- Delete an entity\n- Manage notification of events",
    "version": "4.0.0"
  },
  "host": "serverRoot",
  "basePath": "/tmf-api/productCatalogManagement/v4/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "tags": [
    {
      "name": "productOffering"
    },
    {
      "name": "prodSpecCharValueUse"
    }
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access",
        "admin": "Grants read and write access to administrative information"
      }
    }
  },
  "paths": {
    "/prodSpecCharValueUse": {
      "get": {
        "operationId": "Дшые prodSpecCharValueUse",
        "summary": "List or find Category objects",
        "description": "This operation list or find Category entities",
        "tags": [
          "prodSpecCharValueUse"
        ],
        "parameters": [
          {
            "name": "fields",
            "description": "Comma-separated properties to be provided in response",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Requested index for start of resources to be provided in response",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Requested number of resources to be provided in response",
            "required": false,
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
                "type": "integer"
              },
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
                "type": "integer"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductSpecificationCharacteristicValueUse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/productOffering": {
      "parameters": [
        {
          "$ref": "#/parameters/CorrelationId"
        },
        {
          "$ref": "#/parameters/RequestId"
        },
        {
          "$ref": "#/parameters/ApplicationId"
        },
        {
          "$ref": "#/parameters/Authorization"
        },
        {
          "$ref": "#/parameters/CacheControl"
        },
        {
          "$ref": "#/parameters/ContentType"
        },
        {
          "$ref": "#/parameters/Connection"
        },
        {
          "$ref": "#/parameters/AcceptEncoding"
        },
        {
          "$ref": "#/parameters/ContentEncoding"
        },
        {
          "$ref": "#/parameters/Accept"
        },
        {
          "$ref": "#/parameters/VfIntent"
        }
      ],
      "get": {
        "operationId": "listProductOffering",
        "summary": "List or find ProductOffering objects",
        "description": "This operation list or find ProductOffering entities",
        "tags": [
          "productOffering"
        ],
        "security": [
          {
            "OAuth2": [
              "read",
              "write",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fields",
            "description": "Comma-separated properties to be provided in response",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Requested index for start of resources to be provided in response",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Requested number of resources to be provided in response",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/VProductOffering"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
                "type": "integer"
              },
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
                "type": "integer"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductOffering"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/productOffering/{id}": {
      "get": {
        "operationId": "retrieveProductOffering",
        "summary": "Retrieves a ProductOffering by ID",
        "description": "This operation retrieves a ProductOffering entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "productOffering"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Identifier of the ProductOffering",
            "required": true,
            "type": "string",
            "in": "path"
          },
          {
            "name": "fields",
            "description": "Comma-separated properties to provide in response",
            "required": false,
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgreementRef": {
      "type": "object",
      "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "Any": {},
    "Attachment": {
      "type": "object",
      "description": "Complements the description of an element (for instance a product) through video, pictures...",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this particular attachment"
        },
        "href": {
          "type": "string",
          "description": "URI for this Attachment"
        },
        "attachmentType": {
          "type": "string",
          "description": "Attachment type such as video, picture"
        },
        "content": {
          "type": "string",
          "description": "The actual contents of the attachment object, if embedded, encoded as base64"
        },
        "description": {
          "type": "string",
          "description": "A narrative text describing the content of the attachment"
        },
        "mimeType": {
          "type": "string",
          "description": "Attachment mime type such as extension file for video, picture and document"
        },
        "name": {
          "type": "string",
          "description": "The name of the attachment"
        },
        "url": {
          "type": "string",
          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
        },
        "size": {
          "$ref": "#/definitions/Quantity",
          "description": "The size of the attachment."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period of time for which the attachment is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "AttachmentRef": {
      "type": "object",
      "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique-Identifier for this attachment"
        },
        "href": {
          "type": "string",
          "description": "URL serving as reference for the attachment resource"
        },
        "description": {
          "type": "string",
          "description": "A narrative text describing the content of the attachment"
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "url": {
          "type": "string",
          "description": "Link to the attachment media/content"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "AttachmentRefOrValue": {
      "type": "object",
      "description": "An attachment by value or by reference. For AttachmentRefOrValue, the attribute type,schemaLocation and referredType are related to the contained entity and not to AttchmentRefOrValue itself",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this particular attachment"
        },
        "href": {
          "type": "string",
          "description": "URI for this Attachment"
        },
        "attachmentType": {
          "type": "string",
          "description": "Attachment type such as video, picture"
        },
        "content": {
          "type": "string",
          "description": "The actual contents of the attachment object, if embedded, encoded as base64"
        },
        "description": {
          "type": "string",
          "description": "A narrative text describing the content of the attachment"
        },
        "mimeType": {
          "type": "string",
          "description": "Attachment mime type such as extension file for video, picture and document"
        },
        "name": {
          "type": "string",
          "description": "The name of the attachment"
        },
        "url": {
          "type": "string",
          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
        },
        "size": {
          "$ref": "#/definitions/Quantity",
          "description": "The size of the attachment."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period of time for which the attachment is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "BundledProductOffering": {
      "type": "object",
      "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the BundledProductOffering"
        },
        "href": {
          "type": "string",
          "description": "Unique reference of the BundledProductOffering"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the BundledProductOffering"
        },
        "bundledProductOfferingOption": {
          "$ref": "#/definitions/BundledProductOfferingOption",
          "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "BundledProductOfferingOption": {
      "type": "object",
      "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded",
      "properties": {
        "numberRelOfferDefault": {
          "type": "integer",
          "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
        },
        "numberRelOfferLowerLimit": {
          "type": "integer",
          "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
        },
        "numberRelOfferUpperLimit": {
          "type": "integer",
          "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "BundledProductOfferingPriceRelationship": {
      "type": "object",
      "description": "This represents a bundling pricing relationship, allowing a price to be composed of multiple other prices (e.g. a recurring charge and a onetime charge).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the bundled product offering price"
        },
        "href": {
          "type": "string",
          "description": "hyperlink reference of the bundled product offering price"
        },
        "name": {
          "type": "string",
          "description": "Name of the bundled product offering price"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "BundledProductSpecification": {
      "type": "object",
      "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the product specification"
        },
        "href": {
          "type": "string",
          "description": "Reference of the product specification"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the product specification"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "Category": {
      "type": "object",
      "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the category"
        },
        "href": {
          "type": "string",
          "description": "Reference of the category"
        },
        "description": {
          "type": "string",
          "description": "Description of the category"
        },
        "isRoot": {
          "type": "boolean",
          "description": "If true, this Boolean indicates that the category is a root of categories"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the category"
        },
        "parentId": {
          "type": "string",
          "description": "Unique identifier of the parent category"
        },
        "version": {
          "type": "string",
          "description": "Category version"
        },
        "productOffering": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingRef"
          },
          "description": "A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
        },
        "subCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryRef"
          },
          "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the category is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "CategoryRef": {
      "type": "object",
      "description": "The category for grouping recommendations",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "version": {
          "type": "string",
          "description": "Category version"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ChannelRef": {
      "type": "object",
      "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ConstraintRef": {
      "type": "object",
      "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
      "properties": {
        "id": {
          "type": "string",
          "description": "reference id to the target constraint"
        },
        "href": {
          "type": "string",
          "description": "Hyperlink reference to the target constraint"
        },
        "name": {
          "type": "string",
          "description": "Name given to the constraint"
        },
        "version": {
          "type": "string",
          "description": "constraint version"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The (class) type of the referred constraint"
        }
      },
      "required": [
        "id"
      ]
    },
    "MarketSegmentRef": {
      "type": "object",
      "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the market segment"
        },
        "href": {
          "type": "string",
          "description": "Reference of the market segment"
        },
        "name": {
          "type": "string",
          "description": "Name of the market segment"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "(Class) type of the referred market segment"
        }
      },
      "required": [
        "id"
      ]
    },
    "Money": {
      "type": "object",
      "description": "A base / value business entity used to represent money",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
        },
        "value": {
          "type": "number",
          "format": "float",
          "description": "A positive floating point number"
        }
      }
    },
    "PlaceRef": {
      "type": "object",
      "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "PricingLogicAlgorithm": {
      "type": "object",
      "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled bahavior in SID). Some of the parameters of the interface definiition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth)",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique id of the PricingLogicAlgorithm"
        },
        "href": {
          "type": "string",
          "description": "hyperlink reference of this PricingLogicAlgorithm"
        },
        "description": {
          "type": "string",
          "description": "Description of the PricingLogicAlgorithm"
        },
        "name": {
          "type": "string",
          "description": "Name given to the PricingLogicAlgorithm"
        },
        "plaSpecId": {
          "type": "string",
          "description": "id of corresponding PricingLogicAlgorithm specification"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the PricingLogicAlgorithm is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductOffering": {
      "type": "object",
      "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the productOffering"
        },
        "href": {
          "type": "string",
          "description": "Reference of the ProductOffering"
        },
        "description": {
          "type": "string",
          "description": "Description of the productOffering"
        },
        "isBundle": {
          "type": "boolean",
          "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
        },
        "isSellable": {
          "type": "boolean",
          "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the productOffering"
        },
        "statusReason": {
          "type": "string",
          "description": "A string providing a complementary information on the value of the lifecycle status attribute."
        },
        "version": {
          "type": "string",
          "description": "ProductOffering version"
        },
        "agreement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRef"
          },
          "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentRefOrValue"
          },
          "description": "Complements the description of an element (for instance a product) through video, pictures..."
        },
        "bundledProductOffering": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundledProductOffering"
          },
          "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering."
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryRef"
          },
          "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates."
        },
        "channel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelRef"
          },
          "description": "The channel defines the channel for selling product offerings."
        },
        "marketSegment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketSegmentRef"
          },
          "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth."
        },
        "place": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaceRef"
          },
          "description": "Place defines the places where the products are sold or delivered."
        },
        "prodSpecCharValueUse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristicValueUse"
          },
          "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
        },
        "productOfferingPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingPrice"
          },
          "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer."
        },
        "productOfferingTerm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingTerm"
          },
          "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
        },
        "productOfferingRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingRelationship"
          },
          "description": "Defines a relationship between this product and other products"
        },
        "productSpecification": {
          "$ref": "#/definitions/ProductSpecification",
          "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
        },
        "resourceCandidate": {
          "$ref": "#/definitions/ResourceCandidateRef",
          "description": "A resource candidate is an entity that makes a ResourceSpecification available to a catalog."
        },
        "serviceCandidate": {
          "$ref": "#/definitions/ServiceCandidateRef",
          "description": "ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
        },
        "serviceLevelAgreement": {
          "$ref": "#/definitions/SLARef",
          "description": "A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the productOffering is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductOfferingPrice": {
      "type": "object",
      "description": "Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (productOfferPriceAlteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique id of this resource"
        },
        "href": {
          "type": "string",
          "description": "Reference of the ProductOfferingPrice"
        },
        "description": {
          "type": "string",
          "description": "Description of the productOfferingPrice"
        },
        "isBundle": {
          "type": "boolean",
          "description": "A flag indicating if this ProductOfferingPrice is composite (bundle) or not"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "the last update time of this ProductOfferingPrice"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "the lifecycle status of this ProductOfferingPrice"
        },
        "name": {
          "type": "string",
          "description": "Name of the productOfferingPrice"
        },
        "percentage": {
          "type": "number",
          "format": "float",
          "description": "Percentage to apply for ProductOfferPriceAlteration (Discount)"
        },
        "priceType": {
          "type": "string",
          "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth."
        },
        "recurringChargePeriodLength": {
          "type": "integer",
          "description": "the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable"
        },
        "recurringChargePeriodType": {
          "type": "string",
          "description": "The period to repeat the application of the price\nCould be month, week..."
        },
        "version": {
          "type": "string",
          "description": "ProductOffering version"
        },
        "bundledPopRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundledProductOfferingPriceRelationship"
          },
          "description": "this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship."
        },
        "constraint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstraintRef"
          },
          "description": "The Constraint resource represents a policy/rule applied to ProductOfferingPrice."
        },
        "channel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelRef"
          },
          "description": "The channel defines the channel for selling product offerings."
        },
        "marketSegment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketSegmentRef"
          },
          "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth."
        },
        "place": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaceRef"
          },
          "description": "Place defines the places where the products are sold or delivered."
        },
        "upfront": {
          "type": "boolean"
        },
        "isBasePrice": {
          "type": "boolean"
        },
        "isDefaultPrice": {
          "type": "boolean"
        },
        "popRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingPriceRelationship"
          },
          "description": "Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount"
        },
        "price": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money that characterizes the price."
        },
        "pricingLogicAlgorithm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricingLogicAlgorithm"
          },
          "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth)."
        },
        "prodSpecCharValueUse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristicValueUse"
          },
          "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics."
        },
        "productOfferingTerm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingTerm"
          },
          "description": "A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods."
        },
        "tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxItem"
          },
          "description": "An amount of money levied on the price of a Product by a legislative body."
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/Quantity",
          "description": "A number and unit representing how many (for instance 1 dozen) of an ProductOffering is available at the offered price. Its meaning depends on the priceType. It could be a price, a rate, or a discount."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the productOfferingPrice is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "the immediate base class type of this product offering"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "hyperlink reference to the schema describing this resource"
        },
        "@type": {
          "type": "string",
          "description": "The class type of this Product offering"
        }
      }
    },
    "ProductOfferingPriceRef": {
      "type": "object",
      "description": "ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ProductOfferingPriceRelationship": {
      "type": "object",
      "description": "Describes a non-composite relationship between product offering prices. For example one price might be an discount alteration for another price.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the associated product offering price"
        },
        "href": {
          "type": "string",
          "description": "hyperlink reference of the associated product offering price"
        },
        "name": {
          "type": "string",
          "description": "Name of the associated product offering price"
        },
        "relationshipType": {
          "type": "string",
          "description": "type of the relationship, for example override, discount, etc."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductOfferingRef": {
      "type": "object",
      "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ProductOfferingRelationship": {
      "type": "object",
      "description": "Describes a non-composite relationship between product offerings.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the associated product offering price"
        },
        "href": {
          "type": "string",
          "description": "hyperlink reference of the associated product offering price"
        },
        "name": {
          "type": "string",
          "description": "Name of the associated product offering price"
        },
        "relationshipType": {
          "type": "string",
          "description": "type of the relationship, for example override, discount, etc."
        },
        "productOfferingRefOrValue": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/ProductOffering"
          },
          "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
        },
        "prodSpecCharValueUse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristicValueUse"
          },
          "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductOfferingTerm": {
      "type": "object",
      "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the productOfferingTerm"
        },
        "name": {
          "type": "string",
          "description": "Name of the productOfferingTerm"
        },
        "duration": {
          "$ref": "#/definitions/Quantity",
          "description": "Duration of the productOfferingTerm"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the productOfferingTerm is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductSpecification": {
      "type": "object",
      "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the product specification"
        },
        "href": {
          "type": "string",
          "description": "Reference of the product specification"
        },
        "brand": {
          "type": "string",
          "description": "The manufacturer or trademark of the specification"
        },
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the product specification is"
        },
        "isBundle": {
          "type": "boolean",
          "description": "isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true)."
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the product specification"
        },
        "productNumber": {
          "type": "string",
          "description": "An identification number assigned to uniquely identity the specification"
        },
        "version": {
          "type": "string",
          "description": "Product specification version"
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentRefOrValue"
          },
          "description": "Complements the description of an element (for instance a product) through video, pictures..."
        },
        "bundledProductSpecification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundledProductSpecification"
          },
          "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification."
        },
        "productSpecCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristic"
          },
          "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process."
        },
        "productSpecificationRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationRelationship"
          },
          "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications."
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "description": "A related party defines party or party role linked to a specific entity."
        },
        "resourceSpecification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSpecificationRef"
          },
          "description": "The ResourceSpecification is required to realize a ProductSpecification."
        },
        "serviceSpecification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceSpecificationRef"
          },
          "description": "ServiceSpecification(s) required to realize a ProductSpecification."
        },
        "targetProductSchema": {
          "$ref": "#/definitions/TargetProductSchema",
          "description": "A target product schema reference. The reference object to the schema and type of target product which is described by product specification."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the product specification is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductSpecificationCharacteristic": {
      "type": "object",
      "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID for the characteristic"
        },
        "configurable": {
          "type": "boolean",
          "description": "If true, the Boolean indicates that the ProductSpecificationCharacteristic is configurable"
        },
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the ProductSpecificationCharacteristic is"
        },
        "extensible": {
          "type": "boolean",
          "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a product"
        },
        "isUnique": {
          "type": "boolean",
          "description": "An indicator that specifies if a value is unique for the specification. Possible values are; \"unique while value is in effect\" and \"unique whether value is in effect or not\""
        },
        "maxCardinality": {
          "type": "integer",
          "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality"
        },
        "minCardinality": {
          "type": "integer",
          "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality"
        },
        "name": {
          "type": "string",
          "description": "Name of the ProductSpecificationCharacteristic"
        },
        "regex": {
          "type": "string",
          "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
        },
        "visible": {
          "type": "boolean"
        },
        "modifiable": {
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean"
        },
        "mappingType": {
          "type": "string"
        },
        "productSpecCharRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristicRelationship"
          },
          "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics."
        },
        "productSpecCharacteristicValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristicValue"
          },
          "description": "A ProductSpecificationCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a ProductSpecificationCharacteristic object. The values of the attributes in the ProductSpecificationCharacteristicValue object describe the values of the attributes that a corresponding ProductSpecificationCharacteristic object can take on."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the ProductSpecificationCharacteristic is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductSpecificationCharacteristicRelationship": {
      "type": "object",
      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among productSpecificationCharacteristics.",
      "properties": {
        "id": {
          "type": "string",
          "description": "the identifier of the associated product specification"
        },
        "href": {
          "type": "string",
          "description": "Hyperlink reference to the target product specification"
        },
        "charSpecSeq": {
          "type": "integer",
          "description": "The order in which a CharacteristicSpecification appears within another CharacteristicSpecification that defines a grouping of CharacteristicSpecifications.\n\nFor example, a grouping may represent the name of an individual. The given name is first, the middle name is second, and the last name is third."
        },
        "name": {
          "type": "string",
          "description": "Name of the target product specification characteristic"
        },
        "relationshipType": {
          "type": "string",
          "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the productSpecificationCharacteristicRelationship is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductSpecificationCharacteristicValue": {
      "type": "object",
      "description": "A ProductSpecificationCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a ProductSpecificationCharacteristic object. The values of the attributes in the ProductSpecificationCharacteristicValue object describe the values of the attributes that a corresponding ProductSpecificationCharacteristic object can take on.",
      "properties": {
        "isDefault": {
          "type": "boolean",
          "description": "Indicates if the value is the default value for a characteristic"
        },
        "rangeInterval": {
          "type": "string",
          "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
        },
        "regex": {
          "type": "string",
          "description": "Regular expression to define constraint on the allowed value"
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
        },
        "valueFrom": {
          "type": "string",
          "description": "The low range value that a characteristic can take on"
        },
        "valueTo": {
          "type": "string",
          "description": "The upper range value that a characteristic can take on"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text, and so forth"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period of time for which a value is applicable"
        },
        "value": {
          "$ref": "#/definitions/Any",
          "description": "A discrete value that the characteristic can take on, or the actual value of the characteristic"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductSpecificationCharacteristicValueUse": {
      "type": "object",
      "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID for the characteristic"
        },
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
        },
        "maxCardinality": {
          "type": "integer",
          "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
        },
        "minCardinality": {
          "type": "integer",
          "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
        },
        "name": {
          "type": "string",
          "description": "Name of the associated productSpecificationCharacteristic"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
        },
        "visible": {
          "type": "boolean"
        },
        "modifiable": {
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "mappingType": {
          "type": "string"
        },
        "productSpecCharacteristicValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSpecificationCharacteristicValue"
          },
          "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic."
        },
        "productSpecification": {
          "$ref": "#/definitions/ProductSpecificationRef",
          "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the productSpecificationCharacteristic is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "ProductSpecificationRef": {
      "type": "object",
      "description": "Product specification reference: A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "version": {
          "type": "string",
          "description": "Version of the product specification"
        },
        "targetProductSchema": {
          "$ref": "#/definitions/TargetProductSchema",
          "description": "A target product schema reference. The reference object to the schema and type of target product which is described by product specification."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ProductSpecificationRelationship": {
      "type": "object",
      "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the productSpecification"
        },
        "href": {
          "type": "string",
          "description": "Reference of the productSpecification"
        },
        "relationshipType": {
          "type": "string",
          "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the productSpecificationRelationship is valid"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "Quantity": {
      "type": "object",
      "description": "An amount in a given unit",
      "properties": {
        "amount": {
          "default": 1,
          "type": "number",
          "format": "float",
          "description": "Numeric value in a given unit"
        },
        "units": {
          "type": "string",
          "description": "Unit"
        }
      }
    },
    "RelatedParty": {
      "type": "object",
      "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
      "required": [
        "@referredType",
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "role": {
          "type": "string",
          "description": "Role played by the related party"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "ResourceCandidateRef": {
      "type": "object",
      "description": "ResourceCandidate reference: A resource candidate is an entity that makes a ResourceSpecification available to a catalog.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the resource candidate"
        },
        "href": {
          "type": "string",
          "description": "Reference of the resource candidate"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource candidate"
        },
        "version": {
          "type": "string",
          "description": "Version of the resource candidate"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ResourceSpecificationRef": {
      "type": "object",
      "description": "Resource Specification reference: The ResourceSpecification is required to realize a ProductSpecification.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the resource specification"
        },
        "href": {
          "type": "string",
          "description": "Reference of the resource specification"
        },
        "name": {
          "type": "string",
          "description": "Name of the requiredResourceSpecification"
        },
        "version": {
          "type": "string",
          "description": "Resource specification version"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "SLARef": {
      "type": "object",
      "description": "ServiceLevelAgreement reference: A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of service level agreement"
        },
        "href": {
          "type": "string",
          "description": "Reference of the service level agreement"
        },
        "name": {
          "type": "string",
          "description": "Name of the service level agreement"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ServiceCandidateRef": {
      "type": "object",
      "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the service candidate"
        },
        "href": {
          "type": "string",
          "description": "Unique reference of the service candidate"
        },
        "name": {
          "type": "string",
          "description": "Name of the service candidate"
        },
        "version": {
          "type": "string",
          "description": "Version of the service candidate"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "ServiceSpecificationRef": {
      "type": "object",
      "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the service specification"
        },
        "href": {
          "type": "string",
          "description": "Reference of the serviceSpecification"
        },
        "name": {
          "type": "string",
          "description": "Name of the requiredServiceSpecification"
        },
        "version": {
          "type": "string",
          "description": "Service specification version"
        },
        "targetServiceSchema": {
          "$ref": "#/definitions/TargetServiceSchema",
          "description": "A target service schema reference (TargetServiceSchemaRef). The reference object to the schema and type of target service which is described by service specification."
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      },
      "required": [
        "id"
      ]
    },
    "TargetProductSchema": {
      "type": "object",
      "description": "The reference object to the schema and type of target product which is described by product specification",
      "required": [
        "@schemaLocation",
        "@type"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "This field provides a link to the schema describing the target product"
        },
        "@type": {
          "type": "string",
          "description": "Class type of the target product"
        }
      }
    },
    "TargetServiceSchema": {
      "type": "object",
      "description": "The reference object to the schema and type of target service which is described by service specification",
      "required": [
        "@schemaLocation",
        "@type"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "This field provides a link to the schema describing the target service"
        },
        "@type": {
          "type": "string",
          "description": "Class type of the target service"
        }
      }
    },
    "TaxItem": {
      "type": "object",
      "description": "A tax item is created for each tax rate and tax type used in the bill.",
      "properties": {
        "taxCategory": {
          "type": "string",
          "description": "Tax category"
        },
        "taxRate": {
          "type": "number",
          "format": "float",
          "description": "Applied rate of the tax"
        },
        "taxAmount": {
          "$ref": "#/definitions/Money",
          "description": "Amount of tax expressed in the given currency"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        }
      }
    },
    "TimePeriod": {
      "type": "object",
      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "End of the time period, using IETC-RFC-3339 format"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end"
        }
      }
    },
    "Error": {
      "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
      "type": "object",
      "required": [
        "code",
        "reason"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Application relevant detail, defined in the API or a common list."
        },
        "reason": {
          "type": "string",
          "description": "Explanation of the reason for the error which can be shown to a client user."
        },
        "message": {
          "type": "string",
          "description": "More details and corrective actions related to the error which can be shown to a client user."
        },
        "status": {
          "type": "string",
          "description": "HTTP Error code extension"
        },
        "referenceError": {
          "type": "string",
          "format": "uri",
          "description": "URI of documentation describing the error."
        },
        "timestamp": {
          "type": "string",
          "format": "uri",
          "description": "URI of documentation describing the error."
        },
        "description": {
          "type": "string",
          "format": "uri",
          "description": "URI of documentation describing the error."
        },
        "errorItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorItem"
          }
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class."
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name."
        }
      }
    },
    "ErrorItem": {
      "description": "errorItem object",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Application relevant detail, defined in the API or a common list."
        },
        "text": {
          "type": "string",
          "description": "Error text"
        },
        "severity": {
          "type": "string",
          "description": "More details and corrective actions related to the error which can be shown to a client user."
        },
        "characteristic": {
          "description": "HTTP Error code characteristic",
          "$ref": "#/definitions/ProductSpecificationCharacteristicValue"
        }
      }
    }
  },
  "parameters": {
    "CorrelationId": {
      "name": "X-Correlation-ID",
      "description": "Correlation ID",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "RequestId": {
      "name": "X-Request-ID",
      "description": "Request ID",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "ApplicationId": {
      "name": "X-Application-ID",
      "description": "Application ID",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "Authorization": {
      "name": "Authorization",
      "description": "Authorization Token",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "CacheControl": {
      "name": "Cache-Control",
      "description": "Authorization Token",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "ContentType": {
      "name": "Content-Type",
      "description": "application/json",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "Connection": {
      "name": "Connection",
      "description": "keep alive",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "AcceptEncoding": {
      "name": "Accept-Encoding",
      "description": "gzip",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "ContentEncoding": {
      "name": "Content-Encoding",
      "description": "gzip",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "Accept": {
      "name": "Accept",
      "description": "application/json",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "VfIntent": {
      "name": "vf-system-intent",
      "description": "backend task intent",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "VProductOffering": {
      "name": "vf-product-offering",
      "description": "CRM product offering level",
      "required": false,
      "in": "header",
      "type": "string"
    }
  }
}